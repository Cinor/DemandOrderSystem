@model DemandOrderSystem.Models.ViewModel.MonthDataViewModel
@using PagedList
@using PagedList.Mvc
@using DemandOrderSystem.Models.ViewModel
@*@model IPagedList<DemandOrder.Models.SimpleOrderViewModel>*@
@{
    ViewBag.Title = "MonthDatas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts{
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

            google.charts.load('current', { packages: ['corechart', 'line'] });

            selectDept = @Model.DeptName;

            if (selectDept == "資訊中心") {
                google.charts.setOnLoadCallback(drawDeptPieChart);
            }

            google.charts.setOnLoadCallback(drawTypePie);


            function drawDeptPieChart() {
                var data = new google.visualization.DataTable();
                data.addColumn('string', 'Dept');
                data.addColumn('number', 'OrderCount');

                @{

                    var group = Model.Orders.GroupBy(model => model.ITDept);

                    foreach (var g in group)
                    {
                        var deptName = string.Format("{0}", g.First().ITDept.ToString());

                        @:var tempITDept = '@deptName';

                        @:console.log(tempITDept);

                        var count = g.Count();

                        @:tempCount = @count;

                        @:console.log(tempCount);

                        @:data.addRows([[tempITDept, tempCount]]);
                    }
                }

                var options = {
                    title: '需求單各部門比例',
                    height: 400,
                    width: 600,
                    pieHole: 0.4
                };

                var chart = new google.visualization.PieChart(document.getElementById('dept_order_percent_pie_chart_div'));

                chart.draw(data, options);
            }

            function drawTypePie() {
                var data = new google.visualization.DataTable();
                data.addColumn('string', '分類');
                data.addColumn('number', 'OrderCount');

                @{

                    group = Model.Orders.GroupBy(model => model.ClassName);

                    foreach (var g in group)
                    {
                        var typeName = "無";
                        if(g.First().ClassName != null)
                        {
                            typeName = string.Format("{0}", g.First().ClassName.ToString());
                        }

                        @:var tempType = '@typeName';

                        @:console.log(tempType);

                        var count = g.Count();

                        @:tempCount = @count;

                        @:console.log(tempCount);

                        @:data.addRows([[tempType, tempCount]]);
                    }
                }

                var options = {
                    title: '需求單分類',
                    height: 400,
                    width: 600,
                    pieHole: 0.4
                };

                var chart = new google.visualization.PieChart(document.getElementById('type_order_percent_pie_chart_div'));

                chart.draw(data, options);
            }

    </script>
}
@*<h2>@string.Format("{0}年{1}月需求單", Model.First().ExpectStartDate.Year, Model.First().ExpectStartDate.Month)</h2>*@
@{
    //哪個有資料就顯示哪個
    string titleDept = "";
    if (Model.DeptName == null)
    {
        titleDept = Model.ApplyDeptName;
    }
    else
    {
        titleDept = Model.DeptName;
    }
}

@{ var title = string.Format("{0}年{1}月 {2} {3}", Model.DataMonth.Year, Model.DataMonth.Month, titleDept, Model.State);}
<h2>@title</h2>
@{ var total = string.Format("總共{0}筆", Model.Orders.Count());}
<h4>@total</h4>
@*orderid 排序*@
@using (Html.BeginForm())
{
    <p>
        搜尋需求單主旨:
        @Html.HiddenFor(m => m.State)
        @Html.HiddenFor(m => m.DeptCode)
        @Html.HiddenFor(m => m.DataMonth)
        @Html.HiddenFor(m => m.DeptName)
        @Html.TextBoxFor(m => m.StrSearch)
        <input type="submit" value="確認" class="btn btn-info"/>
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Orders.First().OrderID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Orders.First().OrderName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Orders.First().ApplyDept)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Orders.First().ITDept)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Orders.First().State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Orders.First().ExpectStartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Orders.First().CaseCloseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Orders.First().ClassName)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model.Orders)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderID)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.OrderName)*@
                @Html.ActionLink(item.OrderName, "Detail", new { orderId = item.OrderID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApplyDept)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ITDept)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpectStartDate, "{0:dd-MM-yyyy}")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CaseCloseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClassName)
            </td>
            <td>
                @Html.ActionLink("Detail", "Detail", new { orderId = item.OrderID })
                @*@Html.ActionLink("Edit", "Edit", new { orderId = item.OrderID })*@
            </td>
        </tr>
    }
</table>

@Html.PagedListPager((IPagedList)Model.Orders, page => Url.Action("MonthDatas", new MonthDataViewModel {
    Page = page,
    State = Model.State,
    DataMonth = Model.DataMonth,
    DeptCode = Model.DeptCode,
    DeptName = Model.DeptName,
    ApplyDeptName = Model.ApplyDeptName,
    StrSearch = Model.StrSearch
}))

@*<div>

        @{
            string[] deptCode = new string[] { "資訊中心", "數位資訊部", "資訊系統部", "投資資訊部", "壽險資訊部", "資訊規劃部" };
        }

        @Html.PagedListPager(Model, page => Url.Action("MonthDatas", new { page, fromdate = ViewBag.date, detailDate = ViewBag.date, state = ViewData["state"], dept = Array.IndexOf(deptCode, ViewData["deptName"]) }))

    </div>*@
<br />
<div class="row">
    <div class="container">
        <div id="dept_order_percent_pie_chart_div" class="col-md-6"></div>
        <br />
        <div id="type_order_percent_pie_chart_div" class="col-md-6"></div>
    </div>
</div>